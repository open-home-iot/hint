name: Release

on:
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  USERNAME: ${{ github.actor }}
  PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_NAME_PREFIX: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install the Angular CLI
        run: |
          npm install -g @angular/cli

      - name: Install frontend dependencies
        run: |
          cd frontend && npm install
      
      - name: Build Angular project
        run: |
          cd frontend && ng build --configuration production --output-path="$PWD/backend/static/ang"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect static files
        run: ./manage.py collectstatic

      - name: Log in to GitHub packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      - name: Ingress docker meta
        id: ingress-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}-ingress
          tags: |
            type=pep440,pattern={{raw}}

      - name: Backend docker meta
        id: backend-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}-backend
          tags: |
            type=pep440,pattern={{raw}}

      - name: Build and push ingress
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/ingress.Dockerfile
          push: true
          tags: ${{ steps.ingress-meta.outputs.tags }}
          labels: ${{ steps.ingress-meta.outputs.labels }}

      - name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/backend.Dockerfile
          push: true
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}
